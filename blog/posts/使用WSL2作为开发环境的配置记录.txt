3:I[1949,[],""]
5:I[881,[],""]
4:["id","%E4%BD%BF%E7%94%A8WSL2%E4%BD%9C%E4%B8%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95","d"]
0:["QtBpRh5pFkzkIv1TXSI0P",[[["",{"children":["blog",{"children":["posts",{"children":[["id","%E4%BD%BF%E7%94%A8WSL2%E4%BD%9C%E4%B8%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95","d"],{"children":["__PAGE__?{\"id\":\"使用WSL2作为开发环境的配置记录\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":["posts",{"children":[["id","%E4%BD%BF%E7%94%A8WSL2%E4%BD%9C%E4%B8%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","posts","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/d38160180230537e.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","posts","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,"$L6",null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/3166555ed423e7d0.css","precedence":"next","crossOrigin":""}]],"$L7"]]]]
8:I[5847,["880","static/chunks/880-7d86cdebdee97737.js","978","static/chunks/app/blog/posts/%5Bid%5D/page-15931062bf18a953.js"],"Article"]
a:I[1954,["954","static/chunks/954-273f835783a37946.js","404","static/chunks/app/blog/page-42100e3c5b3e7f61.js"],""]
b:I[6379,["601","static/chunks/app/error-cc7e79a445fd8611.js"],""]
c:I[8320,["954","static/chunks/954-273f835783a37946.js","737","static/chunks/737-bf52939b29388273.js","54","static/chunks/54-c612362733bb9e0b.js","185","static/chunks/app/layout-a29803bb4b53bdfb.js"],"Footer"]
d:I[6300,["954","static/chunks/954-273f835783a37946.js","737","static/chunks/737-bf52939b29388273.js","54","static/chunks/54-c612362733bb9e0b.js","185","static/chunks/app/layout-a29803bb4b53bdfb.js"],"SakanaWidget"]
9:T1872,<p>使用 WSL2 作为开发环境并不是一帆风顺的，还是需要做一些特别的配置。</p>
<!-- more -->
<!-- TOC -->
<ul>
<li><a href="#%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E4%B8%AA%E5%88%AB%E5%91%BD%E4%BB%A4">无法使用个别命令</a></li>
<li><a href="#%E5%9C%A8-wsl-%E4%B8%AD%E5%90%AF%E5%8A%A8-windows-%E7%9A%84-vs-code">在 WSL 中启动 Windows 的 VS Code</a></li>
<li><a href="#%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%89%E8%A3%85-chrome">使用命令行安装 Chrome</a></li>
<li><a href="#%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE">代理配置</a></li>
</ul>
<!-- /TOC -->
<p><strong>使用的发行版与版本</strong></p>
<ul>
<li>Ubuntu 20.04 LTS</li>
<li>Debian 11</li>
</ul>
<h2 id="无法使用个别命令">无法使用个别命令</h2>
<p>例如使用 <code>npm</code> 命令就会出现下面这种情况，但我之前使用 WSL2 的 Ubuntu 18 就没有遇到过这种情况，但这次使用 Ubuntu 20 与 Debian 11 都出现了这种情况。</p>
<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:#59873A;--shiki-dark:#80A665">$</span><span style="color:#B56959;--shiki-dark:#C98A7D"> npm install</span></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">/usr/bin/env:</span><span style="color:#B56959;--shiki-dark:#C98A7D"> ‘bash</span><span style="color:#A65E2B;--shiki-dark:#C99076">\r</span><span style="color:#B56959;--shiki-dark:#C98A7D">’: No such file or directory</span></span>
<span class="line"></span></code></pre>
<p>解决方法就是在 <code>/etc/wsl.conf</code> 文件下添加以下内容，具体原因与细节可以参考<a href="https://stackoverflow.com/questions/67938486/after-installing-npm-on-wsl-ubuntu-20-04-i-get-the-message-usr-bin-env-bash" rel="noreferrer" target="_blank">这个页面</a>。</p>
<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span>[interop]</span></span>
<span class="line"><span>appendWindowsPath = false</span></span>
<span class="line"><span></span></span></code></pre>
<h2 id="在-wsl-中启动-windows-的-vs-code">在 WSL 中启动 Windows 的 VS Code</h2>
<p>首先需要安装 VS Code 插件 <strong>Remote - WSL</strong>。</p>
<p>通常我们会使用在命令行中，使用 <code>code</code> 命令打开项目所在的目录，但在 WSL 直接使用 <code>code</code> 命令则可能会提示 Command not found。</p>
<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:#59873A;--shiki-dark:#80A665">$</span><span style="color:#B56959;--shiki-dark:#C98A7D"> code .</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">Command</span><span style="color:#B5695999;--shiki-dark:#C98A7D99"> '</span><span style="color:#B56959;--shiki-dark:#C98A7D">code</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D"> not found, but can be installed with:</span></span>
<span class="line"></span></code></pre>
<p>我在 Ubuntu 上无法使用 <code>code</code> 命令，但在 Debian 则上可以使用，只是会提示我们需要手动安装一下相关的包。</p>
<p>我们可以通过添加 Windows 的 VS Code 所在的路径至 <code>~/.bashrc</code> 中，实现在 WSL 中直接使用 <code>code</code> 命令使用 VS Code 打开当前所在的目录。</p>
<p>例如我的 VS Code 的安装目录是在 C:\Program Files\Microsoft VS Code，则在 <code>~/.bashrc</code> 中添加以下内容，保存后重启 WSL。</p>
<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:#AB5959;--shiki-dark:#CB7676">export</span><span style="color:#B07D48;--shiki-dark:#BD976A"> PATH</span><span style="color:#999999;--shiki-dark:#666666">=</span><span style="color:#B07D48;--shiki-dark:#BD976A">$PATH</span><span style="color:#B56959;--shiki-dark:#C98A7D">:</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span><span style="color:#B56959;--shiki-dark:#C98A7D">/mnt/c/Program Files/Microsoft VS Code/bin</span><span style="color:#B5695999;--shiki-dark:#C98A7D99">'</span></span>
<span class="line"></span></code></pre>
<h2 id="使用命令行安装-chrome">使用命令行安装 Chrome</h2>
<p>有的时候我们需要在 WSL 中运行 Chrome，使用以下命令即可。</p>
<blockquote>
<p><code>apt</code> 是 Ubuntu 和 Debian 内置的包管理工具，如果你使用的是其他的发行版，请改用与之对应的包管理工具。</p>
</blockquote>
<pre class="shiki shiki-themes vitesse-light vitesse-dark" style="background-color:#ffffff;--shiki-dark-bg:#121212;color:#393a34;--shiki-dark:#dbd7caee" tabindex="0"><code><span class="line"><span style="color:#59873A;--shiki-dark:#80A665">$</span><span style="color:#B56959;--shiki-dark:#C98A7D"> sudo apt install google-chrome-stable # 安装 Chrome</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">$</span><span style="color:#B56959;--shiki-dark:#C98A7D"> google-chrome --version # 查看 Chrome 版本号，判断是否安装成功</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;--shiki-dark:#80A665">$</span><span style="color:#B56959;--shiki-dark:#C98A7D"> google-chrome # 启动 Chrome</span></span>
<span class="line"></span></code></pre>
<p>或者使用 WSL 文档中提供的安装方法 <a href="https://learn.microsoft.com/en-us/windows/wsl/tutorials/gui-apps#install-google-chrome-for-linux" rel="noreferrer" target="_blank">Install Google Chrome for Linux
</a>。</p>
<h2 id="代理配置">代理配置</h2>
<p>建议在 Windows 上使用 TUN 或者 SSTAP 这类全局代理的方式，方便省事。</p>2:["$","$L8",null,{"post":{"id":"使用WSL2作为开发环境的配置记录","contentHtml":"$9","summary":"使用 WSL2 作为开发环境并不是一帆风顺的，还是需要做一些特别的配置。","title":"使用 WSL2 作为开发环境的配置记录","date":"$D2022-04-09T06:49:00.000Z","updated":"$D2023-04-22T15:16:00.000Z","tags":["WSL","Linux","Windows"],"publishedAt":"Sat Apr 09 2022 06:49:00 GMT+0000 (Coordinated Universal Time)","updatedAt":"Sat Apr 22 2023 15:16:00 GMT+0000 (Coordinated Universal Time)"}}]
6:["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","href":"https://avatars.githubusercontent.com/u/45930107","sizes":"any"}],[["$","link","https://avatars.githubusercontent.com/u/3102803?v=4",{"rel":"preload","href":"https://avatars.githubusercontent.com/u/3102803?v=4"}],["$","link","https://avatars.githubusercontent.com/u/10811862?v=4",{"rel":"preload","href":"https://avatars.githubusercontent.com/u/10811862?v=4"}],["$","link","https://avatars.githubusercontent.com/u/1610614?v=4",{"rel":"preload","href":"https://avatars.githubusercontent.com/u/1610614?v=4"}]]]}],["$","body",null,{"children":["$","div",null,{"className":"flex justify-center","children":["$","div",null,{"className":"relative pc-container flex-1 flex flex-col gap-3 p-3","children":[["$","header",null,{"children":["$","nav",null,{"className":"flex gap-3","children":[["$","$La",null,{"href":"/","children":["$","button",null,{"className":"\n  rounded-xl px-3 py-2\n  text-xl text-red-900 text-center\n  bg-rose-300 hover:bg-rose-200\n  transition-all\n inline-block w-32","type":"button","tabIndex":-1,"children":"Home"}]}],["$","$La",null,{"href":"/blog","children":["$","button",null,{"className":"\n  rounded-xl px-3 py-2\n  text-xl text-red-900 text-center\n  bg-rose-300 hover:bg-rose-200\n  transition-all\n inline-block w-32","type":"button","tabIndex":-1,"children":"Blog"}]}]]}]}],["$","main",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$b","errorStyles":[],"errorScripts":[],"template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}],["$","$Lc",null,{}],["$","aside",null,{"className":"absolute h-full right-full -mt-3 pb-3 hidden xl:flex flex-col-reverse transition-all duration-1000","children":["$","$Ld",null,{"className":"sticky bottom-3 z-10","options":{"title":true}}]}],["$","aside",null,{"className":"absolute h-full left-full -mt-3 pb-3 hidden xl:flex flex-col-reverse transition-all duration-1000","children":["$","$Ld",null,{"className":"sticky bottom-3 z-10","options":{"character":"takina","title":true}}]}],["$","div",null,{"className":"relative"}]]}]}]}]]}]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"使用 WSL2 作为开发环境的配置记录 - Pink Champagne's homepage"}],["$","meta","3",{"property":"og:title","content":"使用 WSL2 作为开发环境的配置记录 - Pink Champagne's homepage"}],["$","meta","4",{"property":"og:description","content":"使用 WSL2 作为开发环境并不是一帆风顺的，还是需要做一些特别的配置。"}],["$","meta","5",{"property":"og:url","content":"https://pinkchampagne.moe/blog/posts/%E4%BD%BF%E7%94%A8WSL2%E4%BD%9C%E4%B8%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95"}],["$","meta","6",{"property":"og:locale","content":"zh_CN"}],["$","meta","7",{"property":"og:image","content":"https://avatars.githubusercontent.com/u/45930107"}],["$","meta","8",{"property":"og:type","content":"article"}],["$","meta","9",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","10",{"name":"twitter:title","content":"使用 WSL2 作为开发环境的配置记录 - Pink Champagne's homepage"}],["$","meta","11",{"name":"twitter:description","content":"使用 WSL2 作为开发环境并不是一帆风顺的，还是需要做一些特别的配置。"}],["$","meta","12",{"name":"twitter:image","content":"https://avatars.githubusercontent.com/u/45930107"}]]
1:null
