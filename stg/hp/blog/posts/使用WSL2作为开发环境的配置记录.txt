1:HL["/stg/hp/_next/static/css/2bc00a4c1f371612.css",{"as":"style"}]
0:["bKbNbNi4heCLOh_Lranpg",[[["",{"children":["blog",{"children":["posts",{"children":[["id","%E4%BD%BF%E7%94%A8WSL2%E4%BD%9C%E4%B8%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95","d"],{"children":["__PAGE__?{\"id\":\"使用WSL2作为开发环境的配置记录\"}",{}]}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/stg/hp/_next/static/css/2bc00a4c1f371612.css","precedence":"next"}]],"$L3"]]]]
4:HL["/stg/hp/_next/static/css/5afa4df0b1238d5a.css",{"as":"style"}]
5:I{"id":2295,"chunks":["295:static/chunks/295-5c932523c3d43876.js","404:static/chunks/app/blog/page-515c23c87150e46e.js"],"name":"","async":false}
6:I{"id":7577,"chunks":["295:static/chunks/295-5c932523c3d43876.js","630:static/chunks/630-803e591ff6f80287.js","185:static/chunks/app/layout-e578a0139b128cd4.js"],"name":"SakanaWidget","async":false}
7:I{"id":1800,"chunks":["272:static/chunks/webpack-023160c00e5daa0c.js","184:static/chunks/43e2ea16-c1b13baf19205bd4.js","783:static/chunks/783-f0a32f64e2fb27b8.js"],"name":"default","async":false}
8:I{"id":6902,"chunks":["601:static/chunks/app/error-b49be62dfe69dc51.js"],"name":"","async":false}
9:I{"id":2394,"chunks":["272:static/chunks/webpack-023160c00e5daa0c.js","184:static/chunks/43e2ea16-c1b13baf19205bd4.js","783:static/chunks/783-f0a32f64e2fb27b8.js"],"name":"default","async":false}
b:I{"id":2895,"chunks":["295:static/chunks/295-5c932523c3d43876.js","630:static/chunks/630-803e591ff6f80287.js","185:static/chunks/app/layout-e578a0139b128cd4.js"],"name":"Footer","async":false}
2:[["$","html",null,{"lang":"zh-Hans","children":[["$","head",null,{"children":["$","link",null,{"rel":"icon","href":"https://avatars.githubusercontent.com/u/45930107","sizes":"any"}]}],["$","body",null,{"children":["$","div",null,{"className":"flex flex-col gap-3 max-w-2xl p-4 my-0 mx-auto","children":[["$","nav",null,{"className":"flex gap-3","children":[["$","a",null,{"href":"/stg/hp","children":["$","button",null,{"className":"\n  rounded-xl px-3 py-2\n  text-xl text-red-900 text-center\n  bg-rose-300 hover:bg-rose-200\n  transition-all\n inline-block w-32","type":"button","children":"Home"}]}],["$","$L5",null,{"href":"/blog","children":["$","button",null,{"className":"\n  rounded-xl px-3 py-2\n  text-xl text-red-900 text-center\n  bg-rose-300 hover:bg-rose-200\n  transition-all\n inline-block w-32","type":"button","children":"Blog"}]}]]}],["$","$L6",null,{"className":"hidden lg:block fixed left-0 xl:left-28 bottom-3 transition-all duration-1000"}],["$","$L6",null,{"className":"hidden lg:block fixed right-0 xl:right-28 bottom-3 transition-all duration-1000","character":"takina"}],["$","main",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$8","errorStyles":[],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","posts","children",["id","%E4%BD%BF%E7%94%A8WSL2%E4%BD%9C%E4%B8%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$La",null],"segment":"__PAGE__?{\"id\":\"使用WSL2作为开发环境的配置记录\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/stg/hp/_next/static/css/5afa4df0b1238d5a.css","precedence":"next"}]]}],"segment":["id","%E4%BD%BF%E7%94%A8WSL2%E4%BD%9C%E4%B8%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95","d"]},"styles":[]}],"segment":"posts"},"styles":[]}],"segment":"blog"},"styles":[]}]}],["$","$Lb",null,{}]]}]}]]}],null]
3:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"使用 WSL2 作为开发环境的配置记录 - Pink Champagne's blog (Beta)"}],["$","meta","2",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
c:I{"id":6450,"chunks":["978:static/chunks/app/blog/posts/[id]/page-f1104e0a0f71f79d.js"],"name":"Article","async":false}
d:Tdcc,<p>使用 WSL2 作为开发环境并不是一帆风顺的，还是需要做一些特别的配置。</p>
<!-- more -->
<!-- TOC -->
<ul>
<li><a href="#%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E4%B8%AA%E5%88%AB%E5%91%BD%E4%BB%A4">无法使用个别命令</a></li>
<li><a href="#%E5%9C%A8-wsl-%E4%B8%AD%E5%90%AF%E5%8A%A8-windows-%E7%9A%84-vs-code">在 WSL 中启动 Windows 的 VS Code</a></li>
<li><a href="#%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%AE%89%E8%A3%85-chrome">使用命令行安装 Chrome</a></li>
<li><a href="#%E4%BB%A3%E7%90%86%E9%85%8D%E7%BD%AE">代理配置</a></li>
</ul>
<!-- /TOC -->
<p><strong>使用的发行版与版本</strong></p>
<ul>
<li>Ubuntu 20.04 LTS</li>
<li>Debian 11</li>
</ul>
<h2 id="无法使用个别命令">无法使用个别命令</h2>
<p>例如使用 <code>npm</code> 命令就会出现下面这种情况，但我之前使用 WSL2 的 Ubuntu 18 就没有遇到过这种情况，但这次使用 Ubuntu 20 与 Debian 11 都出现了这种情况。</p>
<pre><code class="language-shell">$ npm install
/usr/bin/env: ‘bash\r’: No such file or directory
</code></pre>
<p>解决方法就是在 <code>/etc/wsl.conf</code> 文件下添加以下内容，具体原因与细节可以参考<a href="https://stackoverflow.com/questions/67938486/after-installing-npm-on-wsl-ubuntu-20-04-i-get-the-message-usr-bin-env-bash" target="_blank" rel="noreferrer">这个页面</a>。</p>
<pre><code class="language-conf">[interop]
appendWindowsPath = false
</code></pre>
<h2 id="在-wsl-中启动-windows-的-vs-code">在 WSL 中启动 Windows 的 VS Code</h2>
<p>首先需要安装 VS Code 插件 <strong>Remote - WSL</strong>。</p>
<p>通常我们会使用在命令行中，使用 <code>code</code> 命令打开项目所在的目录，但在 WSL 直接使用 <code>code</code> 命令则可能会提示 Command not found。</p>
<pre><code class="language-shell">$ code .

Command 'code' not found, but can be installed with:
</code></pre>
<p>我在 Ubuntu 上无法使用 <code>code</code> 命令，但在 Debian 则上可以使用，只是会提示我们需要手动安装一下相关的包。</p>
<p>我们可以通过添加 Windows 的 VS Code 所在的路径至 <code>~/.bashrc</code> 中，实现在 WSL 中直接使用 <code>code</code> 命令使用 VS Code 打开当前所在的目录。</p>
<p>例如我的 VS Code 的安装目录是在 C:\Program Files\Microsoft VS Code，则在 <code>~/.bashrc</code> 中添加以下内容，保存后重启 WSL。</p>
<pre><code class="language-shell">export PATH=$PATH:'/mnt/c/Program Files/Microsoft VS Code/bin'
</code></pre>
<h2 id="使用命令行安装-chrome">使用命令行安装 Chrome</h2>
<p>有的时候我们需要在 WSL 中运行 Chrome，使用以下命令即可。</p>
<blockquote>
<p><code>apt</code> 是 Ubuntu 和 Debian 内置的包管理工具，如果你使用的是其他的发行版，请改用与之对应的包管理工具。</p>
</blockquote>
<pre><code class="language-shell">$ sudo apt install google-chrome-stable # 安装 Chrome

$ google-chrome --version # 查看 Chrome 版本号，判断是否安装成功

$ google-chrome # 启动 Chrome
</code></pre>
<p>或者使用 WSL 文档中提供的安装方法 <a href="https://learn.microsoft.com/en-us/windows/wsl/tutorials/gui-apps#install-google-chrome-for-linux" target="_blank" rel="noreferrer">Install Google Chrome for Linux
</a>。</p>
<h2 id="代理配置">代理配置</h2>
<p>建议在 Windows 上使用 TUN 或者 SSTAP 这类全局代理的方式，方便省事。</p>a:["$","div",null,{"className":"markdown-body","children":[["$","div",null,{"children":[["$","h1",null,{"children":"使用 WSL2 作为开发环境的配置记录"}],["$","p",null,{"children":[["$","time",null,{"children":["Published at: ","2022-04-09"]}],["$","br",null,{}],["$","time",null,{"children":["Updated at: ","2023-04-22"]}]]}]]}],["$","$Lc",null,{"html":"$d"}]]}]
