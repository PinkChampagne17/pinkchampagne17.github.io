1:HL["/stg/hp/_next/static/css/4726f99846488bfd.css",{"as":"style"}]
0:["OZDLgkkEkLlQhS_v3Fw-q",[[["",{"children":["blog",{"children":["posts",{"children":[["id","%E5%9C%A8JavaScript%E4%B8%AD%EF%BC%8CMath.max()%E5%92%8CMath.min()%E5%9C%A8%E4%B8%8D%E5%A1%AB%E5%85%A5%E5%8F%82%E6%95%B0%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%94%E5%9B%9E-INFINITY%E4%B8%8EINFINITY","d"],{"children":["__PAGE__?{\"id\":\"在JavaScript中，Math.max()和Math.min()在不填入参数的情况下为什么返回-INFINITY与INFINITY\"}",{}]}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/stg/hp/_next/static/css/4726f99846488bfd.css","precedence":"next"}]],["$L3",null]]]]]
4:HL["/stg/hp/_next/static/css/789162ebc8c5e2e4.css",{"as":"style"}]
5:I{"id":"5904","chunks":["904:static/chunks/904-7bdff5f4c8d79faf.js","404:static/chunks/app/blog/page-1c699a6f6f7cdc35.js"],"name":"","async":false}
6:I{"id":"3660","chunks":["904:static/chunks/904-7bdff5f4c8d79faf.js","910:static/chunks/910-6409c82cf3f3543a.js","185:static/chunks/app/layout-59835ce40ff06322.js"],"name":"SakanaWidget","async":false}
7:I{"id":"7718","chunks":["272:static/chunks/webpack-b11d9ea85a814807.js","501:static/chunks/575debc0-737c1c5d81a19012.js","524:static/chunks/524-9ca1ace78685b623.js"],"name":"","async":false}
8:I{"id":"7771","chunks":["601:static/chunks/app/error-f60b6694a64054a4.js"],"name":"","async":false}
9:I{"id":"4765","chunks":["272:static/chunks/webpack-b11d9ea85a814807.js","501:static/chunks/575debc0-737c1c5d81a19012.js","524:static/chunks/524-9ca1ace78685b623.js"],"name":"","async":false}
b:I{"id":"4355","chunks":["904:static/chunks/904-7bdff5f4c8d79faf.js","910:static/chunks/910-6409c82cf3f3543a.js","185:static/chunks/app/layout-59835ce40ff06322.js"],"name":"Footer","async":false}
2:[["$","html",null,{"lang":"zh-Hans","children":[["$","head",null,{"children":["$","link",null,{"rel":"icon","href":"https://avatars.githubusercontent.com/u/45930107","sizes":"any"}]}],["$","body",null,{"children":["$","div",null,{"className":"flex flex-col gap-3 max-w-2xl p-4 my-0 mx-auto","children":[["$","nav",null,{"className":"flex gap-3","children":[["$","a",null,{"href":"/stg/hp","children":["$","button",null,{"className":"\n  rounded-xl px-3 py-2\n  text-xl text-red-900 text-center\n  bg-rose-300 hover:bg-rose-200\n  transition-all\n inline-block w-32","type":"button","children":"Home"}]}],["$","$L5",null,{"href":"/blog","children":["$","button",null,{"className":"\n  rounded-xl px-3 py-2\n  text-xl text-red-900 text-center\n  bg-rose-300 hover:bg-rose-200\n  transition-all\n inline-block w-32","type":"button","children":"Blog"}]}]]}],["$","$L6",null,{"className":"hidden lg:block fixed left-0 bottom-3"}],["$","$L6",null,{"className":"hidden lg:block fixed right-0 bottom-3","character":"takina"}],["$","main",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$8","errorStyles":[],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","posts","children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","posts","children",["id","%E5%9C%A8JavaScript%E4%B8%AD%EF%BC%8CMath.max()%E5%92%8CMath.min()%E5%9C%A8%E4%B8%8D%E5%A1%AB%E5%85%A5%E5%8F%82%E6%95%B0%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%94%E5%9B%9E-INFINITY%E4%B8%8EINFINITY","d"],"children"],"error":"$undefined","errorStyles":"$undefined","loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"template":["$","$L9",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$La",null],"segment":"__PAGE__?{\"id\":\"在JavaScript中，Math.max()和Math.min()在不填入参数的情况下为什么返回-INFINITY与INFINITY\"}"},"styles":[["$","link","0",{"rel":"stylesheet","href":"/stg/hp/_next/static/css/789162ebc8c5e2e4.css","precedence":"next"}]]}],"segment":["id","%E5%9C%A8JavaScript%E4%B8%AD%EF%BC%8CMath.max()%E5%92%8CMath.min()%E5%9C%A8%E4%B8%8D%E5%A1%AB%E5%85%A5%E5%8F%82%E6%95%B0%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%94%E5%9B%9E-INFINITY%E4%B8%8EINFINITY","d"]},"styles":[]}],"segment":"posts"},"styles":[]}],"segment":"blog"},"styles":[]}]}],["$","$Lb",null,{}]]}]}]]}],null]
3:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"探究在 JavaScript 中，Math.max() 和 Math.min() 在不填入参数的情况下为什么返回 -INFINITY 与 INFINITY - Pink Champagne's blog (Beta)"}],["$","meta","2",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
c:I{"id":"7457","chunks":["978:static/chunks/app/blog/posts/[id]/page-623a164c6042aa69.js"],"name":"Article","async":false}
a:["$","div",null,{"className":"markdown-body","children":[["$","div",null,{"children":[["$","h1",null,{"children":"探究在 JavaScript 中，Math.max() 和 Math.min() 在不填入参数的情况下为什么返回 -INFINITY 与 INFINITY"}],["$","p",null,{"children":[["$","time",null,{"children":["Published at: ","2021-09-29"]}],["$","br",null,{}],["$","time",null,{"children":["Updated at: ","2021-09-29"]}]]}]]}],["$","$Lc",null,{"html":"<p>在一张被广为流传的 JavaScript Meme（梗图）中，我们可以看到这么一个例子，<code>Math.max()</code> 在不填入的参数的情况下返回了 <code>-INFINITY</code>，<code>Math.min()</code> 在同样的情况下返回了 <code>INFINITY</code>。</p>\n<!-- more -->\n<p><img src=\"/stg/hp/images/posts/covers/js-meme-infinity.jpg\" alt=\"JavaScript Meme\"></p>\n<p>明明是一个求最大数的方法，却返回了用于表示最小数的 <code>-INFINITY</code>，这让我感觉到有点匪夷所思。</p>\n<p>想探寻为什么其实很简单，标准库的代码其实也是人写的，只要去找一下 <code>Math.max()</code> 与 <code>Math.min()</code> 的具体实现方式就能知道了。</p>\n<blockquote>\n<p>以下文字内容建议配合附加的代码配合观看</p>\n</blockquote>\n<p>以 <code>Math.max()</code> 为例，在 Chrome 浏览器所使用的 JavaScript 引擎，也就是 V8 引擎的 Math 库的<a href=\"https://chromium.googlesource.com/v8/v8/+/4.3.21/src/math.js?autodive=0%2F%2F\" target=\"_blank\" rel=\"noreferrer\">源码</a>中，我们可以看到当所填入的参数个数<strong>为</strong> <code>2</code> 时，则使用 <code>if</code> 语句既可以实现返回最大值的功能。但当填入的参数个数<strong>不为</strong> <code>2</code> 时，则是使用 <code>for</code> 循环遍历所有的参数，并使用一个变量 <code>r</code> 存储参数中最小的值。而变量 <code>r</code> 的在一开始被赋值为 <code>-INFINITY</code>，如果参数的个数为 <code>0</code> 时，则用于找出最小值的 <code>for</code> 语句块则不会被执行，所以直接返回了 <code>-Infinity</code>。</p>\n<p><code>Math.min()</code> 其实也是一个思路，这里就不多讲了。</p>\n<pre><code class=\"language-javascript\">// ECMA 262 - 15.8.2.11\nfunction MathMax(arg1, arg2) {  // length == 2\n  var length = %_ArgumentsLength();\n  // 如果参数的个数为2，直接使用if语句判断结果\n  if (length == 2) {\n    arg1 = TO_NUMBER_INLINE(arg1);\n    arg2 = TO_NUMBER_INLINE(arg2);\n    if (arg2 > arg1) return arg2;\n    if (arg1 > arg2) return arg1;\n    if (arg1 == arg2) {\n      // 如果两个参数都为0（如参数填入了0与-0），优先返回-0\n      // Make sure -0 is considered less than +0.\n      return (arg1 === 0 &#x26;&#x26; %_IsMinusZero(arg1)) ? arg2 : arg1;\n    }\n    // All comparisons failed, one of the arguments must be NaN.\n    return NAN;\n  }\n  // 如果参数的个数不为2，比如填入了0个、1个甚至多个参数时\n  // 通过遍历的方式找出最小值，并用变量r进行存储\n  var r = -INFINITY;\n  // 如果参数个数为0，这下面的for语句块则不会执行\n  for (var i = 0; i &#x3C; length; i++) {\n    var n = %_Arguments(i);\n    if (!IS_NUMBER(n)) n = NonNumberToNumber(n);\n    // Make sure +0 is considered greater than -0.\n    if (NUMBER_IS_NAN(n) || n > r || (r === 0 &#x26;&#x26; n === 0 &#x26;&#x26; %_IsMinusZero(r))) {\n      r = n;\n    }\n  }\n  return r;\n}\n\n// ECMA 262 - 15.8.2.12\nfunction MathMin(arg1, arg2) {  // length == 2\n  var length = %_ArgumentsLength();\n  if (length == 2) {\n    arg1 = TO_NUMBER_INLINE(arg1);\n    arg2 = TO_NUMBER_INLINE(arg2);\n    if (arg2 > arg1) return arg1;\n    if (arg1 > arg2) return arg2;\n    if (arg1 == arg2) {\n      // Make sure -0 is considered less than +0.\n      return (arg1 === 0 &#x26;&#x26; %_IsMinusZero(arg1)) ? arg1 : arg2;\n    }\n    // All comparisons failed, one of the arguments must be NaN.\n    return NAN;\n  }\n  var r = INFINITY;\n  for (var i = 0; i &#x3C; length; i++) {\n    var n = %_Arguments(i);\n    if (!IS_NUMBER(n)) n = NonNumberToNumber(n);\n    // Make sure -0 is considered less than +0.\n    if (NUMBER_IS_NAN(n) || n &#x3C; r || (r === 0 &#x26;&#x26; n === 0 &#x26;&#x26; %_IsMinusZero(n))) {\n      r = n;\n    }\n  }\n  return r;\n}\n</code></pre>"}]]}]
